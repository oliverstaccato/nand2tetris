// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM8[address(t)](t)
 *     Write: If load(t-1) then RAM8[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load == 1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM8 {
	IN in[16], load, address[3];
	OUT out[16];

PARTS:
	DMux8Way(in=load,sel=address,a=a,b=b,c=c,d=d,e=e,f=f,g=g,h=h);
	Register(in=in,load=a,out=outa);
	Register(in=in,load=b,out=outb);
	Register(in=in,load=c,out=outc);
	Register(in=in,load=d,out=outd);
	Register(in=in,load=e,out=oute);
	Register(in=in,load=f,out=outf);
	Register(in=in,load=g,out=outg);
	Register(in=in,load=h,out=outh);
	Mux8Way16(a=outa,b=outb,c=outc,d=outd,e=oute,f=outf,g=outg,h=outh,sel=address,out=out);
	
}
